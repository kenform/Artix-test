@use 'sass:math';
@import './base/variables.scss';
@import './base/mixins.scss';
@import './base/null.scss';


body {
	.lock & {
		overflow: hidden;
		touch-action: none;
		overscroll-behavior: none;
	}
	.loaded & {
	}
}

.wrapper {
	min-height: 100vh;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	@supports (overflow: clip) {
		overflow: clip;
	}
	> main {
		flex: 1 1 auto;
	}
	> * {
		min-width: 0;
	}
}

@if ($responsiveType==1) {
	[class*='__container'] {
		@if ($maxWidthContainer>0) {
			max-width: toRem($containerWidth);
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			@if ($maxWidthContainer>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			} @else {
				@include adaptiveValue('padding-left', math.div($containerPadding, 2), 15);
				@include adaptiveValue('padding-right', math.div($containerPadding, 2), 15);
			}
		}
	}
} @else {
	[class*='__container'] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: toRem($containerWidth);
		} @else {
			@if ($containerPadding>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: toRem(970);
		}
		@media (max-width: $tablet) {
			max-width: toRem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			}
		}
	}
}